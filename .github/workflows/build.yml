name: Build

on:
  push:
  pull_request:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: libzmusic_player.so
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: zmusic_player.dll
          - os: macos-latest
            target: x86_64-apple-darwin aarch64-apple-darwin
            artifact_name: libzmusic_player.dylib

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Toolchain
      run: rustup install stable && rustup default stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.artifact_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        retention-days: 30

    - name: Build info
      run: |
        echo "Build completed for ${{ matrix.os }}"
        echo "Target: ${{ matrix.target }}"
        echo "Artifact: ${{ matrix.artifact_name }}"
        ls -la target/${{ matrix.target }}/release/
