name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Run tests
      run: cargo test

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Clippy check
      run: cargo clippy -- -D warnings

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: libzmusic_player.so
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: zmusic_player.dll
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: libzmusic_player.dylib

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build project
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-${{ matrix.artifact_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        retention-days: 30

  java-test:
    name: Java Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Download Linux build artifact
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest-libzmusic_player.so
        path: java/

    - name: Compile Java code
      run: |
        cd java
        javac me/zhenxin/zmusic/player/*.java

    - name: Test Java integration
      run: |
        cd java
        java "-Djava.library.path=." me.zhenxin.zmusic.player.JniPlayer
